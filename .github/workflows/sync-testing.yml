name: Safe Sync dev to testing (with PR fallback)

on:
  push:
    branches:
      - dev

permissions:
  contents: write
  pull-requests: write

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout dev
        uses: actions/checkout@v3
        with:
          # Check out dev specifically
          ref: dev
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Clean workspace
        run: |
          # Remove untracked files/directories to avoid leftover artifacts
          git clean -ffd

      - name: Fetch all branches
        run: git fetch --all

      - name: Check if 'testing' branch exists on remote
        id: check_testing
        run: |
          if git ls-remote --exit-code origin testing; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "::notice::Branch 'testing' does not exist. Skipping merge."
          fi

      - name: Attempt merge dev â†’ testing
        id: merge_attempt
        if: steps.check_testing.outputs.exists == 'true'
        run: |
          git checkout testing
          git reset --hard origin/testing
          git clean -fd
          if git merge origin/dev --no-edit; then
            echo "merged=true" >> $GITHUB_OUTPUT
            echo "::notice::Merge successful. Pushing to testing."
          else
            echo "merged=false" >> $GITHUB_OUTPUT
            echo "::warning::Merge conflict detected. Falling back to PR creation."
            git merge --abort || true
            git reset --hard
            git clean -fd
          fi
